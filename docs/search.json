[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 ipacs authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/how_to_run_the_ipacs_model.html","id":"set-up","dir":"Articles","previous_headings":"","what":"Set up","title":"How to run the IPACS model","text":"Set value objects may wish change. example, system.file() used find example data stored IPACS package. However, can input string path desired file - e.g. `import_file(“myfile.xlsx”). Use import_file import sheets file containing model parameters. produce 5 dataframes: “arrivals_all”, “init_conds”, “capacity”, “losA” “costs”. R return multiple objects, return list dataframes list dataframe names, use assign create current environment. Use calculate_mu_sigma recalculate mu sigma losA dataframe using chosen method sd_los (applicable). Set simulation length number unique dates arrivals. Use create_scenarios create scenarios arr_scenarios.","code":"library(ipacs) input_filename = system.file(\"extdata\", \"IPACS_20230214_fix.xlsx\", package=\"ipacs\") est_method = 1 sd_los = 3 files <- import_file(input_filename) for (x in seq_along(files[[1]])){   assign(files[[1]][x], files[[2]][[x]]) } losA <- calculate_mu_sigma() sim_length <- as.integer(length(unique(arrivals_all$date))) scenarios <- create_scenarios(scenarios=TRUE) arr_scenarios <- create_scenarios(scenarios=FALSE)"},{"path":"/articles/how_to_run_the_ipacs_model.html","id":"visit-based-simulation-p1","dir":"Articles","previous_headings":"","what":"Visit-based simulation (P1)","title":"How to run the IPACS model","text":"Use sim_setup create objects visit-based simulation. returned list, use assign extract add environment.","code":"setup_visit <- sim_setup(\"visit\") #> character(0) for (i in seq_along(setup_visit[[1]])){   assign(setup_visit[[1]][i], setup_visit[[2]][[i]]) }"},{"path":"/articles/vignette_example.html","id":"set-up","dir":"Articles","previous_headings":"","what":"Set up","title":"How to run the IPACS model","text":"Set value objects may wish change. example, system.file() used find example data stored IPACS package. However, can input string path desired file - e.g. `import_file(“myfile.xlsx”). Use import_file import sheets file containing model parameters. produce 5 dataframes: “arrivals_all”, “init_conds”, “capacity”, “losA” “costs”. R return multiple objects, return list dataframes list dataframe names, use assign create current environment. Use calculate_mu_sigma recalculate mu sigma losA dataframe using chosen method sd_los (applicable). Set simulation length number unique dates arrivals. Use create_scenarios create scenarios arr_scenarios.","code":"library(ipacs) input_filename = system.file(\"extdata\", \"IPACS_20230214_fix.xlsx\", package=\"ipacs\") est_method = 1 sd_los = 3 files <- import_file(input_filename) for (x in seq_along(files[[1]])){   assign(files[[1]][x], files[[2]][[x]]) } losA <- calculate_mu_sigma() sim_length <- as.integer(length(unique(arrivals_all$date))) scenarios <- create_scenarios(scenarios=TRUE) arr_scenarios <- create_scenarios(scenarios=FALSE)"},{"path":"/articles/vignette_example.html","id":"visit-based-simulation-p1","dir":"Articles","previous_headings":"","what":"Visit-based simulation (P1)","title":"How to run the IPACS model","text":"Use sim_setup create objects visit-based simulation. returned list, use assign extract add environment.","code":"setup_visit <- sim_setup(\"visit\") #> character(0) for (i in seq_along(setup_visit[[1]])){   assign(setup_visit[[1]][i], setup_visit[[2]][[i]]) }"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Amy Heather. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Heather (2023). ipacs: Improving Patient flow Acute, Community Social care (IPACS). https://github.com/amyheather/ipacs, https://amyheather.github.io/ipacs/.","code":"@Manual{,   title = {ipacs: Improving Patient flow between Acute, Community and Social care (IPACS)},   author = {Amy Heather},   year = {2023},   note = {https://github.com/amyheather/ipacs, https://amyheather.github.io/ipacs/}, }"},{"path":"/index.html","id":"ipacs","dir":"","previous_headings":"","what":"Improving Patient flow between Acute, Community and Social care (IPACS)","title":"Improving Patient flow between Acute, Community and Social care (IPACS)","text":"repository contains models project “Improving Patient flow Acute, Community Social care (IPACS)”, converted package format. models used D2A resource planning. include re-coding bug fixes Amy Heather.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Improving Patient flow between Acute, Community and Social care (IPACS)","text":"can install development version ipacs GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"amyheather/ipacs\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Improving Patient flow between Acute, Community and Social care (IPACS)","text":"example:","code":"library(ipacs) # load_setup() # setup_visit <- setup_all(\"visit\")"},{"path":"/reference/calculate_mu_sigma.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate mu and sigma — calculate_mu_sigma","title":"Calculate mu and sigma — calculate_mu_sigma","text":"Calculates mu sigma, stores within los_params, within length stay dataframe (losA).","code":""},{"path":"/reference/calculate_mu_sigma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate mu and sigma — calculate_mu_sigma","text":"","code":"calculate_mu_sigma(   est_method = parent.frame()$est_method,   losA = parent.frame()$losA,   sd_los = parent.frame()$sd_los )"},{"path":"/reference/calculate_mu_sigma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate mu and sigma — calculate_mu_sigma","text":"est_method Integer. Indicates estimation method use, either 1 2. losA Dataframe. sd_los Float. Standard deviation length stay distribution.","code":""},{"path":"/reference/calculate_mu_sigma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate mu and sigma — calculate_mu_sigma","text":"losA new mu, sigma los_params columns.","code":""},{"path":"/reference/calculate_mu_sigma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate mu and sigma — calculate_mu_sigma","text":"","code":"if (FALSE) { # interactive() losA <- calculate_mu_sigma(est_method = 1, losA = losA, sd_los = 3) }"},{"path":"/reference/create_scenarios.html","id":null,"dir":"Reference","previous_headings":"","what":"Create scenarios — create_scenarios","title":"Create scenarios — create_scenarios","text":"Combine arrivals_all, capacity, losA init_conds create scenarios arr_scenarios","code":""},{"path":"/reference/create_scenarios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create scenarios — create_scenarios","text":"","code":"create_scenarios(   scenarios,   arrivals_all = parent.frame()$arrivals_all,   capacity = parent.frame()$capacity,   losA = parent.frame()$losA,   init_conds = parent.frame()$init_conds )"},{"path":"/reference/create_scenarios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create scenarios — create_scenarios","text":"scenarios TRUE FALSE. set TRUE, find rows distinct node sc_arr arrivals_all dataframe capacity dataframe losA dataframe init_conds dataframe","code":""},{"path":"/reference/create_scenarios.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create scenarios — create_scenarios","text":"scenarios dataframe","code":""},{"path":"/reference/import_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Import simulation excel file — import_file","title":"Import simulation excel file — import_file","text":"Imports sheet excel file contain parameters simulation. File contain sheets \"arrivals\", \"initial conditions\", \"capacity\", \"los\" \"costs\". Returns dataframes, along list dataframe names.","code":""},{"path":"/reference/import_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import simulation excel file — import_file","text":"","code":"import_file(filename)"},{"path":"/reference/import_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import simulation excel file — import_file","text":"filename String.","code":""},{"path":"/reference/import_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import simulation excel file — import_file","text":"List length 2. Contains list dataframe names list dataframes.","code":""},{"path":"/reference/import_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import simulation excel file — import_file","text":"","code":"if (FALSE) { # interactive() import_file(\"ipacs_model_parameters.xlsx\") }"},{"path":"/reference/sim_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Set-up for simulation — sim_setup","title":"Set-up for simulation — sim_setup","text":"Filters scenarios, arr_scenarios costs visit bed pathways. Extracts parameters scenarios dataframe. Pivots subset arr_scenarios. Creates vector scenario name.","code":""},{"path":"/reference/sim_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set-up for simulation — sim_setup","text":"","code":"sim_setup(   model_type,   scenarios = parent.frame()$scenarios,   arr_scenarios = parent.frame()$arr_scenarios,   costs = parent.frame()$costs,   sd_los = parent.frame()$sd_los )"},{"path":"/reference/sim_setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set-up for simulation — sim_setup","text":"model_type string - either \"visit\" \"bed\" scenarios dataframe arr_scenarios dataframe costs dataframe sd_los dataframe","code":""},{"path":"/reference/sim_setup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set-up for simulation — sim_setup","text":"list(return_new_names, return_objects)","code":""}]
